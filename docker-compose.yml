services:
  # Backend API Gateway
  api-gateway:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - MONGODB_URL=mongodb://mongodb:27017
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-secret-key-change-in-production
      - TWITCH_CLIENT_ID=${TWITCH_CLIENT_ID:-your-twitch-client-id}
      - TWITCH_CLIENT_SECRET=${TWITCH_CLIENT_SECRET:-your-twitch-client-secret}
      - RUST_LOG=debug
    depends_on:
      - mongodb
      - redis
    networks:
      - alias-network
    restart: unless-stopped

  # MongoDB
  mongodb:
    image: mongo:7
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=alias_game
    networks:
      - alias-network
    restart: unless-stopped

  # Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - alias-network
    restart: unless-stopped

  # Frontend (Angular)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    depends_on:
      - api-gateway
    networks:
      - alias-network
    restart: unless-stopped

volumes:
  mongodb_data:
  redis_data:

networks:
  alias-network:
    driver: bridge